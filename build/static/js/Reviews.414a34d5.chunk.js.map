{"version":3,"sources":["views/Reviews/Reviews.jsx"],"names":["Reviews","props","useState","movieReviews","setMovieReviews","movieId","match","params","useEffect","getMovieReviews","then","res","data","results","length","map","review","id","author","content","url","href","target","rel"],"mappings":"gJAkCeA,UA9Bf,SAAiBC,GAAO,IAAD,EACmBC,mBAAS,IAD5B,mBACdC,EADc,KACAC,EADA,KAEfC,EAAUJ,EAAMK,MAAMC,OAAOF,QAQnC,OANAG,qBAAU,WACRC,YAAgBJ,GAASK,MAAK,SAACC,GAC7BP,EAAgBO,EAAIC,KAAKC,cAE1B,CAACR,MAGCF,EAAaW,QACd,6BACGX,EAAaY,KAAI,SAACC,GAAY,IACrBC,EAA6BD,EAA7BC,GAAIC,EAAyBF,EAAzBE,OAAQC,EAAiBH,EAAjBG,QAASC,EAAQJ,EAARI,IAC7B,OACE,+BACE,0CAAaF,KACb,4BAAIC,IACJ,mBAAGE,KAAMD,EAAKE,OAAO,SAASC,IAAI,sBAAlC,sBAHON,SAUX","file":"static/js/Reviews.414a34d5.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nimport { getMovieReviews } from \"../../components/utils/requestMovies\";\r\n\r\nfunction Reviews(props){\r\n  const [movieReviews, setMovieReviews] = useState([]);\r\n  const movieId = props.match.params.movieId;\r\n\r\n  useEffect(() => {\r\n    getMovieReviews(movieId).then((res) => {\r\n      setMovieReviews(res.data.results);\r\n    });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    (!!movieReviews.length && (\r\n      <ul>\r\n        {movieReviews.map((review) => {\r\n          const { id, author, content, url } = review;\r\n          return (\r\n            <li key={id}>\r\n              <h5>Author: {author}</h5>\r\n              <p>{content}</p>\r\n              <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                Source\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    )) || <p>no reviews</p>\r\n  );\r\n};\r\n\r\nexport default Reviews;"],"sourceRoot":""}