{"version":3,"sources":["views/Reviews/Reviews.jsx"],"names":["Reviews","props","useState","movieReviews","setMovieReviews","movieId","match","params","useEffect","getMovieReviews","then","res","data","results","length","map","review","id","author","content","url","href","target","rel"],"mappings":"gJAkCeA,UA9Bf,SAAiBC,GAAQ,IAAD,EACkBC,mBAAS,IAD3B,mBACfC,EADe,KACDC,EADC,KAEhBC,EAAUJ,EAAMK,MAAMC,OAAOF,QAQnC,OANAG,qBAAU,WACRC,YAAgBJ,GAASK,MAAK,SAAAC,GAC5BP,EAAgBO,EAAIC,KAAKC,cAE1B,CAACR,MAGCF,EAAaW,QACd,6BACGX,EAAaY,KAAI,SAAAC,GAAW,IACnBC,EAA6BD,EAA7BC,GAAIC,EAAyBF,EAAzBE,OAAQC,EAAiBH,EAAjBG,QAASC,EAAQJ,EAARI,IAC7B,OACE,+BACE,0CAAaF,KACb,4BAAIC,IACJ,mBAAGE,KAAMD,EAAKE,OAAO,SAASC,IAAI,sBAAlC,sBAHON,SAUX","file":"static/js/Reviews.b448b4e4.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport { getMovieReviews } from '../../components/utils/requestMovies';\n\nfunction Reviews(props) {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const movieId = props.match.params.movieId;\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(res => {\n      setMovieReviews(res.data.results);\n    });\n  }, [movieId]);\n\n  return (\n    (!!movieReviews.length && (\n      <ul>\n        {movieReviews.map(review => {\n          const { id, author, content, url } = review;\n          return (\n            <li key={id}>\n              <h5>Author: {author}</h5>\n              <p>{content}</p>\n              <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                Source\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    )) || <p>no reviews</p>\n  );\n}\n\nexport default Reviews;\n"],"sourceRoot":""}